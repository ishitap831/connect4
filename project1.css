body {
  margin: 0;
  font-family: "Helvetica", "Verdana", "Roboto", sans-serif;
  background-color: lightpink;
}

h1 {
  margin: 0 0 15px;
  padding: 15px;
  color: #000;
  
  font-size: 40px;
  font-weight: normal;
  text-align: center;
  background-color: lightskyblue;
}

form {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
}

.board {
  position: relative;
  width: 450px;
  height: 450px;
}

.field {
  position: absolute;
  top: 0;
  left: 15px;
  padding: 75px 0 0 0;
  box-sizing: border-box;
  width: 420px;
  height: 435px;
  overflow: hidden;
  cursor: not-allowed;
}

.grid {
  display: inline-flex;
  flex-flow: column wrap;
  position: relative;
  min-width: 420px;
  height: 360px;
  counter-reset: player 1;
}

.column {
  display: inline-flex;
  flex-flow: column wrap;
  height: 360px;
}

.front {
  position: absolute;
  top: 60px;
  border: 15px solid #800000;
  border-radius: 4px;
  box-sizing: border-box;
  width: 450px;
  height: 390px;
  pointer-events: none;
  background: radial-gradient(circle, transparent, transparent 18px, #800000 20px, #800000 23px, #1f90ff 23px, #1f90ff 36px, #800000) center top/60px 60px;
}

/* Invisible inputs */
input {
  display: none;
  position: absolute;
  top: -90px;
  margin: 0;
  width: 60px;
  height: 450px;
  cursor: pointer;
  opacity: 0;
}
input:indeterminate {
  display: initial;
}
/*Takes in inputes from Black */
.column > input:nth-of-type(2n) {
  right: 360px;
}
.column > .column > input:nth-of-type(2n) {
  right: 300px;
}
.column > .column > .column > input:nth-of-type(2n) {
  right: 240px;
}
.column > .column > .column > .column > input:nth-of-type(2n) {
  right: 180px;
}
.column > .column > .column > .column > .column > input:nth-of-type(2n) {
  right: 120px;
}
.column > .column > .column > .column > .column > .column > input:nth-of-type(2n) {
  right: 60px;
}
.column > .column > .column > .column > .column > .column > .column > input:nth-of-type(2n) {
  right: 0;
}
/*Takes in input from White */
.column > input:nth-of-type(2n+1) {
  left: 0;
}
.column > .column > input:nth-of-type(2n+1) {
  left: 60px;
}
.column > .column > .column > input:nth-of-type(2n+1) {
  left: 120px;
}
.column > .column > .column > .column > input:nth-of-type(2n+1) {
  left: 180px;
}
.column > .column > .column > .column > .column > input:nth-of-type(2n+1) {
  left: 240px;
}
.column > .column > .column > .column > .column > .column > input:nth-of-type(2n+1) {
  left: 300px;
}
.column > .column > .column > .column > .column > .column > .column > input:nth-of-type(2n+1) {
  left: 360px;
}

/* Disc */
.disc {
  position: relative;
  top: 0;
  width: 60px;
  height: 60px;
  color: #000;
  background: radial-gradient(circle, currentcolor 12px, #666 13px, currentcolor 14px, currentcolor 21px, #666 22px, transparent 23px, transparent) center/60px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s, top 0s 0.2s, color 0s 0.2s;
}

/* Black's turn */
input:hover + .disc {
  color: #000;
  opacity: 1;
  transition: opacity 0.2s, top 0s;
}
input:checked + .disc {
  color: #000;
  opacity: 1;
}
/* White's turn */
input:hover + input + .disc {
  color: #fff;
  opacity: 1;
  transition: opacity 0.2s, top 0s;
}
input:checked + input + .disc {
  color: #fff;
  opacity: 1;
}

/* Height and time of disc fall per row */
input:hover + .disc:nth-of-type(1),
input:hover + input + .disc:nth-of-type(1){
  top: -75px;
}
input:checked + .disc:nth-of-type(1),
input:checked + input + .disc:nth-of-type(1){
  transition: top 0.14s cubic-bezier(0.56, 0, 1, 1);
}
input:hover + .disc:nth-of-type(2),
input:hover + input + .disc:nth-of-type(6n+2) {
  top: -135px;
}
input:checked + .disc:nth-of-type(2),
input:checked + input + .disc:nth-of-type(2){
  transition: top 0.19s cubic-bezier(0.56, 0, 1, 1);
}
input:hover + .disc:nth-of-type(3),
input:hover + input + .disc:nth-of-type(3) {
  top: -195px;
}
input:checked + .disc:nth-of-type(3),
input:checked + input + .disc:nth-of-type(3) {
  transition: top 0.23s cubic-bezier(0.56, 0, 1, 1);
}
input:hover + .disc:nth-of-type(4),
input:hover + input + .disc:nth-of-type(4) {
  top: -255px;
}
input:checked + .disc:nth-of-type(4),
input:checked + input + .disc:nth-of-type(4) {
  transition: top 0.26s cubic-bezier(0.56, 0, 1, 1);
}
input:hover + .disc:nth-of-type(5),
input:hover + input + .disc:nth-of-type(5){
  top: -315px;
}
input:checked + .disc:nth-of-type(5),
input:checked + input + .disc:nth-of-type(5){
  transition: top 0.29s cubic-bezier(0.56, 0, 1, 1);
}
input:hover + .disc:nth-of-type(6n),
input:hover + input + .disc:nth-of-type(6n) {
  top: -375px;
}
input:checked + .disc:nth-of-type(6n),
input:checked + input + .disc:nth-of-type(6n) {
  transition: top 0.32s cubic-bezier(0.56, 0, 1, 1);
}

/*Tracks turns of each color*/
input:checked + .disc {
  counter-increment: player 2;
}
input:checked + input + .disc {
  counter-increment: player -2;
}

.grid::after {
  content: counter(player, lower-roman);
  display: inline-block;
  max-width: 840px;
  min-width: 420px;
  letter-spacing: 375px;
  font-family: monospace;
  font-size: 1px;
  overflow: hidden;
}

/*Checks if there is a Draw between Black and White*/
form:valid .column > .column > .column > .column > .column > .column > .column > .column::after {
  content: "It's a draw!";
  z-index: 1;
  position: absolute;
  left: 0;
  top: -75px;
  width: 420px;
  height: 435px;
  visibility: visible;
  color: #000;
  font-size: 30px;
  text-align: center;
  line-height: 60px;
  cursor: initial;
  pointer-events: auto;
  animation: outcome 1.5s;
}

/*To check of the black wins in a coloum*/
input:checked + .disc + input + input:checked + .disc + input + input:checked + .disc + input + input:checked ~ .column::after,
/*To check of the black wins in a row*/
input:nth-of-type(2):checked ~ .column > input:nth-of-type(2):checked ~ .column > input:nth-of-type(2):checked ~ .column > input:nth-of-type(2):checked ~ .column::after,
input:nth-of-type(4):checked ~ .column > input:nth-of-type(4):checked ~ .column > input:nth-of-type(4):checked ~ .column > input:nth-of-type(4):checked ~ .column::after,
input:nth-of-type(6):checked ~ .column > input:nth-of-type(6):checked ~ .column > input:nth-of-type(6):checked ~ .column > input:nth-of-type(6):checked ~ .column::after,
input:nth-of-type(8):checked ~ .column > input:nth-of-type(8):checked ~ .column > input:nth-of-type(8):checked ~ .column > input:nth-of-type(8):checked ~ .column::after,
input:nth-of-type(10):checked ~ .column > input:nth-of-type(10):checked ~ .column > input:nth-of-type(10):checked ~ .column > input:nth-of-type(10):checked ~ .column::after,
input:nth-of-type(12):checked ~ .column > input:nth-of-type(12):checked ~ .column > input:nth-of-type(12):checked ~ .column > input:nth-of-type(12):checked ~ .column::after,
/*To check of the black wins diagonally*/
input:nth-of-type(2):checked ~ .column > input:nth-of-type(4):checked ~ .column > input:nth-of-type(6):checked ~ .column > input:nth-of-type(8):checked ~ .column::after,
input:nth-of-type(4):checked ~ .column > input:nth-of-type(6):checked ~ .column > input:nth-of-type(8):checked ~ .column > input:nth-of-type(10):checked ~ .column::after,
input:nth-of-type(6):checked ~ .column > input:nth-of-type(8):checked ~ .column > input:nth-of-type(10):checked ~ .column > input:nth-of-type(12):checked ~ .column::after,
input:nth-of-type(8):checked ~ .column > input:nth-of-type(6):checked ~ .column > input:nth-of-type(4):checked ~ .column > input:nth-of-type(2):checked ~ .column::after,
input:nth-of-type(10):checked ~ .column > input:nth-of-type(8):checked ~ .column > input:nth-of-type(6):checked ~ .column > input:nth-of-type(4):checked ~ .column::after,
input:nth-of-type(12):checked ~ .column > input:nth-of-type(10):checked ~ .column > input:nth-of-type(8):checked ~ .column > input:nth-of-type(6):checked ~ .column::after {
  content: "Black wins!!!";
  z-index: 2;
  position: absolute;
  left: 0;
  top: -75px;
  width: 420px;
  height: 435px;
  visibility: visible;
  color: #000;
  font-size: 30px;
  text-align: center;
  line-height: 60px;
  cursor: initial;
  pointer-events: auto;
  animation: outcome 1s;
}

/*To check of the white wins in a coloum*/
input:checked + input + .disc + input:checked + input + .disc + input:checked + input + .disc + input:checked ~ .column::after,

/*To check if the white wins in a row */
input:nth-of-type(1):checked ~ .column > input:nth-of-type(1):checked ~ .column > input:nth-of-type(1):checked ~ .column > input:nth-of-type(1):checked ~ .column::after,
input:nth-of-type(3):checked ~ .column > input:nth-of-type(3):checked ~ .column > input:nth-of-type(3):checked ~ .column > input:nth-of-type(3):checked ~ .column::after,
input:nth-of-type(5):checked ~ .column > input:nth-of-type(5):checked ~ .column > input:nth-of-type(5):checked ~ .column > input:nth-of-type(5):checked ~ .column::after,
input:nth-of-type(7):checked ~ .column > input:nth-of-type(7):checked ~ .column > input:nth-of-type(7):checked ~ .column > input:nth-of-type(7):checked ~ .column::after,
input:nth-of-type(9):checked ~ .column > input:nth-of-type(9):checked ~ .column > input:nth-of-type(9):checked ~ .column > input:nth-of-type(9):checked ~ .column::after,
input:nth-of-type(11):checked ~ .column > input:nth-of-type(11):checked ~ .column > input:nth-of-type(11):checked ~ .column > input:nth-of-type(11):checked ~ .column::after,
/*To check if white wins diagnolly*/
input:nth-of-type(1):checked ~ .column > input:nth-of-type(3):checked ~ .column > input:nth-of-type(5):checked ~ .column > input:nth-of-type(7):checked ~ .column::after,
input:nth-of-type(3):checked ~ .column > input:nth-of-type(5):checked ~ .column > input:nth-of-type(7):checked ~ .column > input:nth-of-type(9):checked ~ .column::after,
input:nth-of-type(5):checked ~ .column > input:nth-of-type(7):checked ~ .column > input:nth-of-type(9):checked ~ .column > input:nth-of-type(11):checked ~ .column::after,
input:nth-of-type(7):checked ~ .column > input:nth-of-type(5):checked ~ .column > input:nth-of-type(3):checked ~ .column > input:nth-of-type(1):checked ~ .column::after,
input:nth-of-type(9):checked ~ .column > input:nth-of-type(7):checked ~ .column > input:nth-of-type(5):checked ~ .column > input:nth-of-type(3):checked ~ .column::after,
input:nth-of-type(11):checked ~ .column > input:nth-of-type(9):checked ~ .column > input:nth-of-type(7):checked ~ .column > input:nth-of-type(5):checked ~ .column::after {
  content: "White wins!!!";
  z-index: 2;
  position: fixed;
  left: 0;
  top: -75px;
  width: 420px;
  height: 435px;
  visibility: visible;
  color: #fff;
  font-size: 30px;
  text-align: center;
  line-height: 60px;
  background: lightpink;
  cursor: initial;
  pointer-events: auto;
  animation: outcome 1s;
}

/*layout for the button*/
button {
  margin: 20px auto;
  border: none;
  border-radius: 2px;
  padding: 12px 18px;
  font-size: 16px;
  cursor: pointer;
  color: #000;
  background: #2196f3 center;
  box-shadow: 0 0 4px #999;
  outline: none;
  transition: background 0.5s;
}
button:hover {
  background: #47a7f5 radial-gradient(circle, transparent 1%, #47a7f5 1%) center/15000%;
}
button:active {
  background-color: #6eb9f7;
  background-size: 100%;
  transition: background 0s;
}

@keyframes outcome {
  0% {
    opacity: 0;
  }
  35% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}